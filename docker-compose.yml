version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1-1-deb8
    networks:
      - network_transaction_conusmer
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:5.5.1-1-deb8
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - network_transaction_conusmer
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:6.0.8-alpine
    ports:
      - 6379:6379
    networks:
      - network_transaction_conusmer
    volumes:
      - ./env/redis-config:/docker/config
      - redis-data:/data 

  postgres:
    image: postgres:12.4-alpine
    environment:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password 
        POSTGRES_DB: example
        PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
        - dbdata:/var/lib/postgresql/data
        - ./env/postgres-init:/docker-entrypoint-initdb.d
    ports:
        - 5432:5432  

volumes:
  dbdata:
  redis-data:  

networks:
  network_transaction_conusmer:
    external: false      