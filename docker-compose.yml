version: '3'
services:
  prometheus:
    image: prom/prometheus:v2.22.0 
    networks:
      - network_transaction_conusmer
    volumes: 
      - ./env/prometheus-config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:7.2.2
    networks:
      - network_transaction_conusmer
    volumes: 
      - ./env/grafana-dashboard/:/var/lib/grafana
    ports:
      - 3000:3000

  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
    networks:
      - network_transaction_conusmer
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=passwd
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=128MiB

  redis:
    image: redis:6.0.8-alpine
    networks:
      - network_transaction_conusmer
    ports:
      - 6379:6379
    volumes:
      - ./env/redis-config:/docker/config
      - redis-data:/data 

  postgres:
    image: postgres:12.4-alpine
    networks:
      - network_transaction_conusmer
    environment:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password 
        POSTGRES_DB: example
        PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
        - dbdata:/var/lib/postgresql/data
        - ./env/postgres-init:/docker-entrypoint-initdb.d
    ports:
        - 5432:5432  

  # consumer-native:
  #   build: 
  #     context: transaction-consumer/
  #     dockerfile: Dockerfile.native
  #     args: 
  #       MAVEN_OPTS: -Djava.net.preferIPv4Stack=true
  #   volumes: 
  #     - mvn-repo:/usr/share/maven/ref/repository
  #   networks:
  #     - network_transaction_conusmer  
  #   ports: 
  #     - 8081:8080
  #   depends_on:
  #     - rabbitmq
  #     - redis
  #     - postgres

  consumer-hotspot:
    build: 
      context: transaction-consumer/
      dockerfile: Dockerfile.hotspot
    volumes: 
      - mvn-repo:/usr/share/maven/ref/repository
    networks:
      - network_transaction_conusmer
    ports: 
      - 8080:8080
    deploy:
      resources:
        limits:
          memory: 1500M
    depends_on:
      - rabbitmq
      - redis
      - postgres

  consumer-openj9:
    build: 
      context: transaction-consumer/
      dockerfile: Dockerfile.openj9
    volumes: 
      - mvn-repo:/usr/share/maven/ref/repository
    networks:
      - network_transaction_conusmer
    ports: 
      - 8180:8080
    deploy:
      resources:
        limits:
          memory: 1500M   
    depends_on:
      - rabbitmq
      - redis
      - postgres

volumes:
  mvn-repo:
  dbdata:
  redis-data: 
  rabbitmq-data:   
  prometheus-data:

networks:
  network_transaction_conusmer:
    external: false